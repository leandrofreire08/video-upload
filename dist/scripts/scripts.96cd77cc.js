"use strict";angular.module("psUploadApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","blueimp.fileupload"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/uploader.html",controller:"UploaderCtrl",controllerAs:"uploader"}).otherwise({redirectTo:"/"})}]),angular.module("psUploadApp").controller("UploaderCtrl",[function(){}]),angular.module("psUploadApp").factory("Wistia",["$http","$q",function(a,b){var c="https://api.wistia.com/v1/",d="709595146c6b8fcb403184fba875f6c9529a95ff5dbf277f3dc08e95ac2d91c9",e="47uj88ic38",f={};return f.getVideoStatus=function(e){var f=b.defer();return a({url:c+"medias/"+e+".json",method:"GET",params:{api_password:d}}).success(function(a){f.resolve(a)}),f.promise},f.getApiPassword=function(){return d},f.getProjectId=function(){return e},f}]),angular.module("psUploadApp").directive("ngUploadFile",[function(){return{restrict:"E",templateUrl:"views/templates/fileForm.html",scope:{allowed:"@",url:"@",autoUpload:"@",sizeLimit:"@",ngModel:"=",name:"@"},controller:["$timeout","$rootScope","$scope","$element","$sce","fileUpload","Wistia",function(a,b,c,d,e,f,g){c.apiPassword=g.getApiPassword(),c.projectId=g.getProjectId(),c.waitingWistiaVideo=!1,c.$on("fileuploaddone",function(d,f){function h(){c.waitingWistiaVideo=!0,g.getVideoStatus(i).then(function(a){b.$emit("video-status",a.status)})}var i=f.result.hashed_id;c.showVideo=!0,c.hashedId=i,h(),b.$on("video-status",function(b,d){"ready"!==d?a(function(){h()},2e3):(c.waitingWistiaVideo=!1,c.wistiaIFrame=e.trustAsHtml('<iframe src="//fast.wistia.net/embed/iframe/'+i+'" allowtransparency="true" frameborder="0" scrolling="no" class="wistia_embed" name="wistia_embed" allowfullscreen mozallowfullscreen webkitallowfullscreen oallowfullscreen msallowfullscreen width="640" height="360"></iframe>'))})}),c.options={url:c.url,dropZone:d,maxFileSize:c.sizeLimit,autoUpload:c.autoUpload},c.loadingFiles=!1,c.queue||(c.queue=[]);var h=function(a){angular.forEach(a,function(a,b){var d={name:a.filename,size:a.length,url:a.url,thumbnailUrl:a.url,result:a};d.url&&"/"!==d.url.charAt(0)&&(d.url="/"+d.url),d.thumbnailUrl&&"/"!==d.thumbnailUrl.charAt(0)&&(d.thumbnailUrl="/"+d.thumbnailUrl),c.queue[b]=d})};c.$watchCollection("filequeue",function(a){h(a)})}]}}]),angular.module("psUploadApp").run(["$templateCache",function(a){a.put("views/templates/fileForm.html",'<form class="fileupload" method="POST" enctype="multipart/form-data" data-ng-app="demo" data-file-upload="options" data-ng-class="{\'fileupload-processing\': processing() || loadingFiles}"> <div class="row fileupload-buttonbar"> <div class="col-lg-7"> <!-- The fileinput-button span is used to style the file input field as button --> <span class="btn btn-success fileinput-button" data-ng-disabled="queue.length > 0"> <i class="glyphicon glyphicon-plus"></i> <span>Add files...</span> <input type="file" name="files" accept="video/*"> </span> <button type="button" class="btn btn-primary start" data-ng-click="submit()"> <i class="glyphicon glyphicon-upload"></i> <span>Start upload</span> </button> <!-- The global file processing state --> <span class="fileupload-process"></span> </div> <!-- The global progress state --> <div class="col-lg-5 fade" data-ng-class="{in: active()}"> <!-- The global progress bar --> <div class="progress progress-striped active" data-file-upload-progress="progress()"><div class="progress-bar progress-bar-success" data-ng-style="{width: num + \'%\'}"></div></div> <!-- The extended global progress state --> <div class="progress-extended">&nbsp;</div> </div> </div> <table class="table table-striped files ng-cloak"> <tr data-ng-repeat="file in queue"> <td data-ng-switch data-on="!!file.thumbnailUrl"> <div class="preview" data-ng-switch-when="true"> <a data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery><img data-ng-src="{{file.thumbnailUrl}}" alt=""></a> </div> <div class="preview" data-ng-switch-default data-file-upload-preview="file"></div> </td> <td> <input type="hidden" name="api_password" value="{{apiPassword}}"> <input type="hidden" name="project_id" value="{{projectId}}"> <p class="name" data-ng-switch data-on="!!file.url"> <span data-ng-switch-when="true" data-ng-switch data-on="!!file.thumbnailUrl"> <a data-ng-switch-when="true" data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery>{{file.name}}</a> <a data-ng-switch-default data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}">{{file.name}}</a> </span> <span data-ng-switch-default>{{file.name}}</span> </p> <strong data-ng-show="file.error" class="error text-danger">{{file.error}}</strong> </td> <td> <p class="size">{{file.size | formatFileSize}}</p> <div class="progress progress-striped active fade" data-ng-class="{pending: \'in\'}[file.$state()]" data-file-upload-progress="file.$progress()"><div class="progress-bar progress-bar-success" data-ng-style="{width: num + \'%\'}"></div></div> </td> <td> <button type="button" class="btn btn-primary start" data-ng-click="file.$submit()" data-ng-hide="!file.$submit || options.autoUpload" data-ng-disabled="file.$state() == \'pending\' || file.$state() == \'rejected\'"> <i class="glyphicon glyphicon-upload"></i> <span>Start</span> </button> <button type="button" class="btn btn-warning cancel" data-ng-click="file.$cancel()" data-ng-hide="!file.$cancel"> <i class="glyphicon glyphicon-ban-circle"></i> <span>Cancel</span> </button> </td> </tr> </table> </form> <div class="alert alert-info" role="alert" data-ng-hide="!waitingWistiaVideo"> Waiting until Wistia video is processed... </div> <div data-ng-hide="!showVideo"> <div ng-bind-html="wistiaIFrame"></div> </div>'),a.put("views/uploader.html",'<ng-upload-file url="https://upload.wistia.com" size-limit="2000"></ng-upload-file>')}]);